{"version":3,"file":"static/js/774.fc8b5595.chunk.js","mappings":"+NAIMA,EAAkB,SAACC,GAAD,MAAY,CAChCC,QAAQC,EAAAA,EAAAA,IAAQF,GADI,ECJXG,EAAa,SAACH,GACvB,OAAOA,EAAMI,SAASC,OACzB,EAEYC,EAAqB,SAACN,GAC/B,OAAOA,EAAMI,SAASG,cACzB,EAEYC,EAAgB,SAACR,GAC1B,OAAOA,EAAMI,SAASK,UACzB,E,UCTD,EAA2B,2BAA3B,EAAgE,0BAAhE,EAAmG,yBAAnG,EAAqI,yBAArI,EAA+K,iCAA/K,EAA8N,8BAA9N,EAAmQ,uBAAnQ,EAAyS,+BAAzS,EAAwV,gCAAxV,EAAmZ,2CAAnZ,EAAud,yCAAvd,EAAihB,iCAAjhB,EAAykB,uCAAzkB,EAA6nB,6BAA7nB,EAAiqB,uBAAjqB,EAAusB,+B,UCsBvsB,EAnBgB,SAACC,GACb,IAAMC,EAAY,SAAAC,GAAM,OAAIA,EAAOC,SAAWC,EAAiB,EAAvC,EAExB,OACI,8BACKJ,EAAMK,OAAOC,KAAI,SAAAC,GAAC,OACf,gBAAKC,UAAWJ,EAAhB,UACI,SAAC,KAAD,CAASI,UAAWP,EAAWQ,GAAE,oBAAeF,EAAEG,IAAlD,UACI,iBAAKF,UAAWJ,EAAhB,WACI,gBAAKI,UAAU,sBAAsBG,IAAKX,EAAMY,OAAQC,IAAI,YAC5D,gBAAKL,UAAWJ,EAAhB,SAAsCG,EAAEO,aAJfP,EAAEG,GADxB,KAY9B,ECDD,EAjBwB,SAACV,GACrB,OACI,8BACKA,EAAMe,cAAcT,KAAI,SAAAU,GAAE,OACvB,gBAAKR,UAAWJ,EAAhB,UACI,iBAAKI,UAAWJ,EAAhB,WACI,gBAAKI,UAAW,2BAA4BG,IAAKX,EAAMY,OAAQC,IAAI,YACnE,iBAAKL,UAAWJ,EAAhB,UAAyCY,EAAGC,SACxC,gBAAKT,UAAWJ,EAAhB,SAA+BY,EAAGE,cAJSF,EAAGN,GADnC,KAYtC,ECAD,EAdmB,SAACV,GAChB,OACI,8BACKA,EAAMmB,UAAUb,KAAI,SAAAc,GAAE,OACnB,gBAAKZ,UAAWJ,EAAhB,UACI,iBAAKI,UAAWJ,EAAhB,UAAqCgB,EAAGH,SACpC,gBAAKT,UAAWJ,EAAhB,SAA+BgB,EAAGF,WAFSE,EAAGV,GADnC,KASlC,E,wCCGD,EAfoB,SAAC,GAAgD,IAA/CW,EAA8C,EAA9CA,aAAcC,EAAgC,EAAhCA,iBAAkBC,EAAc,EAAdA,SAClD,OACI,SAAC,KAAD,CAAQC,cAAeH,EACfE,SAAUA,EACVD,iBAAkBA,EAF1B,UAGI,UAAC,KAAD,CAAMd,UAAWJ,EAAjB,WACI,SAAC,KAAD,CAAOU,KAAM,UACNW,SAAU,SAACzB,GAAD,OAAW,SAAC0B,EAAA,GAAD,QAAUC,YAAa,wBACQ3B,GAD1C,KAEjB,mBAAQQ,UAAW,WAAYoB,KAAM,SAArC,wBAIf,ECSD,GAAeC,EAAAA,EAAAA,IAAQ,KAAM,CAACC,cAAAA,EAAAA,GAA9B,EApB6B,SAAC9B,GAC1B,IAEMsB,EAAmBS,EAAAA,GAAW,CAChCd,QAASc,EAAAA,KAAaC,SAAS,0BASnC,OACI,SAAC,EAAD,CAAaX,aAbI,CAACJ,QAAS,IAcdK,iBAAkBA,EAClBC,SATA,SAACU,EAAD,GAA0B,IAAhBC,EAAe,EAAfA,UAClBjB,EAAWgB,EAAXhB,QACLjB,EAAM8B,cAAcb,GACpBiB,GACH,GAOJ,ICED,EAnBiB,SAAClC,GACd,OACI,iBAAKQ,UAAWJ,EAAhB,WACI,gBAAKI,UAAWJ,EAAhB,UACI,SAAC,EAAD,CAASC,OAAQL,EAAML,QAASiB,OAAQZ,EAAMmC,mBAElD,iBAAK3B,UAAWJ,EAAhB,WACI,iBAAKI,UAAWJ,EAAhB,WACI,SAAC,EAAD,CAAiBW,cAAef,EAAMH,eAAgBe,OAAQZ,EAAMmC,iBACpE,SAAC,EAAD,CAAYhB,UAAWnB,EAAMD,iBAEjC,gBAAKS,UAAWJ,EAAhB,UACI,SAAC,EAAD,WAKnB,ECFD,GAAegC,EAAAA,EAAAA,KACXP,EAAAA,EAAAA,KARoB,SAACvC,GAAD,MAAY,CAChCK,QAASF,EAAWH,GACpBO,eAAgBD,EAAmBN,GACnCS,WAAYD,EAAcR,GAC1B6C,eAAeE,EAAAA,EAAAA,IAAU/C,GAJL,GAQK,CAAC,ITfE,SAACgD,GAO7B,OAAOT,EAAAA,EAAAA,IAAQxC,EAAiB,CAAC,EAA1BwC,EANmB,SAAC7B,GACvB,OAAKA,EAAMT,QAEJ,SAAC+C,GAAD,UAAetC,KAFI,SAAC,KAAD,CAAUS,GAAI,UAG3C,GAGJ,GSMD,EAb0B,SAACT,GACvB,OACI,SAAC,GAAD,UAAcA,GAErB,G","sources":["hoc/withAuthRedirect.js","redux/selectors/messagesSelector.js","webpack://project8/./src/components/Messages/Messages.module.css?8e7e","components/Messages/Friends/Friends.jsx","components/Messages/FriendsMessages/FriendsMessages.jsx","components/Messages/MyMessages/MyMessages.jsx","components/Messages/SendMessage/SendMessage.jsx","components/Messages/SendMessage/SendMessageContainer.jsx","components/Messages/Messages.jsx","components/Messages/MessagesContainer.jsx"],"sourcesContent":["import {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {getAuth} from \"../redux/selectors/authSelector\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: getAuth(state),\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    const RedirectComponent = (props) => {\r\n        if (!props.isAuth) return <Navigate to={\"/login\"}/>\r\n\r\n        return <Component {...props}/>\r\n    }\r\n\r\n    return connect(mapStateToProps, {})(RedirectComponent);\r\n}","export const getFriends = (state) => {\r\n    return state.messages.friends;\r\n}\r\n\r\nexport const getFriendsMessages = (state) => {\r\n    return state.messages.friendMessages;\r\n}\r\n\r\nexport const getMyMessages = (state) => {\r\n    return state.messages.myMessages;\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"messages\":\"Messages_messages__1iExN\",\"friends\":\"Messages_friends__TORCr\",\"friend\":\"Messages_friend__voq19\",\"active\":\"Messages_active__OBNDt\",\"friend_content\":\"Messages_friend_content__LAwhK\",\"friend_name\":\"Messages_friend_name__mYemO\",\"chat\":\"Messages_chat__ohNfB\",\"chat_content\":\"Messages_chat_content__qqNiJ\",\"chat_textarea\":\"Messages_chat_textarea__bT1dq\",\"friend_message_container\":\"Messages_friend_message_container__BUe4J\",\"friend_message_content\":\"Messages_friend_message_content__CCCzP\",\"friend_message\":\"Messages_friend_message__PmdwL\",\"my_message_container\":\"Messages_my_message_container__9ZVPM\",\"my_message\":\"Messages_my_message__P91J0\",\"time\":\"Messages_time__Da6ab\",\"message_form\":\"Messages_message_form__MY6bc\"};","import React from 'react';\r\nimport classes from \"../Messages.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Friends = (props) => {\r\n    const setActive = active => active.isActive ? classes.active : \"\";\r\n\r\n    return (\r\n        <>\r\n            {props.friend.map(f =>\r\n                <div className={classes.friend} key={f.id}>\r\n                    <NavLink className={setActive} to={`/messages/${f.id}`}>\r\n                        <div className={classes.friend_content}>\r\n                            <img className=\"avatar avatar_small\" src={props.avatar} alt=\"Avatar\"/>\r\n                            <div className={classes.friend_name}>{f.name}</div>\r\n                        </div>\r\n                    </NavLink>\r\n                </div>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Friends;","import React from 'react';\r\nimport classes from \"../Messages.module.css\";\r\n\r\nconst FriendsMessages = (props) => {\r\n    return (\r\n        <>\r\n            {props.friendMessage.map(fm =>\r\n                <div className={classes.friend_message_container} key={fm.id}>\r\n                    <div className={classes.friend_message_content}>\r\n                        <img className={\"avatar avatar_vary_small\"} src={props.avatar} alt=\"Avatar\"/>\r\n                        <div className={classes.friend_message}>{fm.message}\r\n                            <sub className={classes.time}>{fm.time}</sub>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FriendsMessages;","import React from 'react';\r\nimport classes from \"../Messages.module.css\";\r\n\r\n\r\nconst MyMessages = (props) => {\r\n    return (\r\n        <>\r\n            {props.myMessage.map(mm =>\r\n                <div className={classes.my_message_container} key={mm.id}>\r\n                    <div className={classes.my_message}>{mm.message}\r\n                        <sub className={classes.time}>{mm.time}</sub>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MyMessages;","import classes from \"../Messages.module.css\";\r\nimport {Field, Form, Formik} from \"formik\";\r\nimport Textarea from \"../../../formik/Textarea/Textarea\";\r\n\r\nconst SendMessage = ({initialValue, validationSchema, onSubmit}) => {\r\n    return (\r\n        <Formik initialValues={initialValue}\r\n                onSubmit={onSubmit}\r\n                validationSchema={validationSchema}>\r\n            <Form className={classes.message_form}>\r\n                <Field name={\"message\"}\r\n                       children={(props) => <Textarea placeholder={\"Enter the message...\"}\r\n                                                                       {...props}/>}/>\r\n                <button className={\"send_btn\"} type={\"submit\"}>&#5169;</button>\r\n            </Form>\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default SendMessage;\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {setNewMessage} from \"../../../redux/reducers/messagesReducer\";\r\nimport * as Yup from \"yup\";\r\nimport SendMessage from \"./SendMessage\";\r\n\r\nconst SendMessageContainer = (props) => {\r\n    const initialValue = {message: \"\"};\r\n\r\n    const validationSchema = Yup.object({\r\n        message: Yup.string().required(\"Text field is empty!\")\r\n    });\r\n\r\n    const onSubmit = (values, {resetForm}) => {\r\n        let {message} = values;\r\n        props.setNewMessage(message);\r\n        resetForm();\r\n    }\r\n\r\n    return (\r\n        <SendMessage initialValue={initialValue}\r\n                     validationSchema={validationSchema}\r\n                     onSubmit={onSubmit}/>\r\n    )\r\n}\r\n\r\nexport default connect(null, {setNewMessage})(SendMessageContainer)","import React from 'react';\r\nimport classes from \"./Messages.module.css\";\r\nimport Friends from \"./Friends/Friends\";\r\nimport FriendsMessages from \"./FriendsMessages/FriendsMessages\";\r\nimport MyMessages from \"./MyMessages/MyMessages\";\r\nimport SendMessageContainer from \"./SendMessage/SendMessageContainer\";\r\n\r\nconst Messages = (props) => {\r\n    return (\r\n        <div className={classes.messages}>\r\n            <div className={classes.friends}>\r\n                <Friends friend={props.friends} avatar={props.defaultAvatar}/>\r\n            </div>\r\n            <div className={classes.chat}>\r\n                <div className={classes.chat_content}>\r\n                    <FriendsMessages friendMessage={props.friendMessages} avatar={props.defaultAvatar}/>\r\n                    <MyMessages myMessage={props.myMessages}/>\r\n                </div>\r\n                <div className={classes.chat_textarea}>\r\n                    <SendMessageContainer/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Messages;","import React from 'react';\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {getFriends, getFriendsMessages, getMyMessages} from \"../../redux/selectors/messagesSelector\";\r\nimport {getAvatar} from \"../../redux/selectors/appSelector\";\r\nimport Messages from \"./Messages\";\r\n\r\n\r\nconst MessagesContainer = (props) => {\r\n    return (\r\n        <Messages {...props}/>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    friends: getFriends(state),\r\n    friendMessages: getFriendsMessages(state),\r\n    myMessages: getMyMessages(state),\r\n    defaultAvatar: getAvatar(state),\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {}),\r\n    withAuthRedirect,\r\n)(MessagesContainer)"],"names":["mapStateToProps","state","isAuth","getAuth","getFriends","messages","friends","getFriendsMessages","friendMessages","getMyMessages","myMessages","props","setActive","active","isActive","classes","friend","map","f","className","to","id","src","avatar","alt","name","friendMessage","fm","message","time","myMessage","mm","initialValue","validationSchema","onSubmit","initialValues","children","Textarea","placeholder","type","connect","setNewMessage","Yup","required","values","resetForm","defaultAvatar","compose","getAvatar","Component"],"sourceRoot":""}